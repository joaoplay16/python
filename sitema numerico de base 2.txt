
Lição I0: O Sistema Numérico de Base 2

Quando contamos, geralmente fazemos isso em base 10. Isso significa que cada posição em um número pode ter um de dez valores, 0-9. Em binário, contamos em base dois, em que cada posição pode ter um de dois valores: 0 ou 1. O padrão de contagem é o mesmo da base 10, exceto quando você "sobe" um valor para uma nova coluna; em binário, você deve "subir" o valor sempre que uma casa assume um valor maior do que um (o que acontece quando o valor excede 9 em base 10).

Por exemplo, os números um e zero são iguais em base 10 e em base 2. Mas em base 2, quando você chega ao número 2, você deve "subir" o um, resultando na representação "10". Somar um novamente resulta em "11" (3), e somar um novamente resulta em "100" (4).

Ao contrário da contagem em base 10, em que cada casa decimal representa uma potência de 10, cada casa em um número binário representa uma potência de dois (ou um bit). O bit mais à direita é o bit dos 1s (dois elevado a zero), o bit seguinte é o bit dos 2's (dois elevado à primeira potência), depois 4, 8, 16, 32, e assim por diante.

O número binário "1010" é 10 na base 2, porque o bit dos 8s e o bit dos 2s estão "ligados":

bit dos 8s  bit dos 4s  bit dos 2s  bit dos 1s
     1               0                1               0 
     8       +      0        +      2       +      0  = 10 

Em Python, você pode escrever números em formato binário iniciando o número com "0b". Fazendo isso, os números podem ser operados como qualquer outro número!

print 0b1,    #1
print 0b10,   #2
print 0b11,   #3
print 0b100,  #4
print 0b101,  #5
print 0b110,  #6
print 0b111   #7
print "******"
print 0b1 + 0b11
print 0b11 * 0b11
